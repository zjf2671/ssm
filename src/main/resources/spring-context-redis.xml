<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
       default-lazy-init="true">
    <cache:annotation-driven cache-manager="cacheManager"/>
    
    
	<!-- jedis 连接池 配置 -->
    <bean id="poolConfigNew" class="redis.clients.jedis.JedisPoolConfig" >
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <!-- 集群 
   <bean id="redisClusterConfigurationNew" class="org.springframework.data.redis.connection.RedisClusterConfiguration">  
   		<property name="maxRedirects" value="${redis.maxRedirects}"></property>  
	    <property name="clusterNodes">   
	        <set>  
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">  
	                <constructor-arg name="host" value="${redis.host1}"/>  
	                <constructor-arg name="port" value="${redis.port1}"/>   
	            </bean>                                           
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">    
	                <constructor-arg name="host" value="${redis.host2}"/>  
	                <constructor-arg name="port" value="${redis.port2}"/>   
	            </bean>                                           
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">    
	                <constructor-arg name="host" value="${redis.host3}"/>  
	                <constructor-arg name="port" value="${redis.port3}"/>   
	            </bean>                                           
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">    
	                <constructor-arg name="host" value="${redis.host4}"/>  
	                <constructor-arg name="port" value="${redis.port4}"/>   
	            </bean>                                           
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">    
	                <constructor-arg name="host" value="${redis.host5}"/>  
	                <constructor-arg name="port" value="${redis.port5}"/>   
	            </bean>                                           
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">    
	                <constructor-arg name="host" value="${redis.host6}"/>  
	                <constructor-arg name="port" value="${redis.port6}"/>  
	            </bean>  
	        </set>
	      </property>  
	</bean>  
   
    <bean id="connectionFactoryNew" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="poolConfig" ref="poolConfigNew"/>
        <constructor-arg name="clusterConfig" ref="redisClusterConfigurationNew"/>
    </bean>
    -->
    
    <!-- 单机 -->
    <bean id="connectionFactoryNew"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
    	p:host-name="${redis.onehost}" p:port="${redis.oneport}" p:password="${redis.password}">  
		<constructor-arg name="poolConfig" ref="poolConfigNew"/>
    </bean> 
	
	<bean id="stringRedisSerializerNew" class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	<bean id="jdkRedisSerializerNew" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
    <bean id="commonRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
        <property name="connectionFactory" ref="connectionFactoryNew" />
		<property name="keySerializer" ref="stringRedisSerializerNew" />  
        <property name="hashKeySerializer" ref="stringRedisSerializerNew" />  
        <property name="valueSerializer" ref="jdkRedisSerializerNew" />  
        <property name="hashValueSerializer" ref="jdkRedisSerializerNew" /> 
    </bean>
 
 	<!-- 配置缓存 过期时间-->
 	<!--  参考配置https://my.oschina.net/wnjustdoit/blog/644311-->
   <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
       <constructor-arg ref="commonRedisTemplate" />
 	   <constructor-arg name="cacheNames">
		   <set>
			   <value>testRedis</value>
			   <value>testRedis1</value>
		   </set>
 	   </constructor-arg>
 	   <!-- 默认有效期5h -->
 	   <property name="defaultExpiration" value="18000"/>
 	   <!-- 配置对应的cacheName的有效期-->
 	   <property name="expires">
		    <map>
		        <entry key="testRedis" value="60"/>
		        <entry key="testRedis1" value="60"/>
		    </map>  
		</property>
   </bean>
   
   <bean id="redisUtils" class="com.ssm.common.util.RedisUtils">
   	 <property name="commonRedisTemplate" ref="commonRedisTemplate"></property>
   </bean>
</beans>